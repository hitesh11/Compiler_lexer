int : INT
num : ID
= : EQL
123123 : NUM
; : SEMI
a : ID
= : EQL
"asdfbjitsdklafh" : STRCNST
char : CHAR
c : ID
= : EQL
'a' : CHARCNST
; : SEMI
c : ID
= : EQL
typedef : TYPEDEF
struct : STRUCT
token : ID
{ : LPC
TokenType : ID
type : ID
; : SEMI
string : ID
value : ID
; : SEMI
token : ID
( : LP
TokenType : ID
' : COMMA
string : ID
' : COMMA
int : INT
) : RP
; : SEMI
void : VOID
set : ID
( : LP
TokenType : ID
' : COMMA
string : ID
) : RP
; : SEMI
} : RPC
token : ID
; : SEMI
while : WHILE
( : LP
num : ID
> : GR
32.2 : REAL
) : RP
{ : LPC
if : IF
( : LP
num : ID
% : MOD
555 : NUM
== : EQLEQL
0 : NUM
) : RP
printf : ID
( : LP
"%d" : STRCNST
' : COMMA
num : ID
) : RP
; : SEMI
else : ELSE
printf : ID
( : LP
"Number is not divisible by555" : STRCNST
; : SEMI
} : RPC
# of lines = 23
